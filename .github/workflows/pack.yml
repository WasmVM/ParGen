name: Package release

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake
        run: >
          cmake -DCMAKE_CXX_COMPILER="clang++"
          -DCMAKE_C_COMPILER="clang"
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=/usr/local
          -S ${{ github.workspace }}
          -B ${{ github.workspace }}/build
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release -j 6
      - name: Pack
        run: cd ${{ github.workspace }}/build && cpack -G DEB -C Release
      - name: Store package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu
          path: ${{ github.workspace }}/build/*.deb

  macos:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: Configure CMake
      run: >
        cmake -DCMAKE_CXX_COMPILER="clang++"
        -DCMAKE_C_COMPILER="clang"
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=/usr/local
        -S ${{ github.workspace }}
        -B ${{ github.workspace }}/build
    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config Release -j 6
    - name: Pack
      run: cd ${{ github.workspace }}/build && cpack -G productbuild -C Release
    - name: Store package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos
        path: ${{ github.workspace }}/build/*.pkg

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure CMake
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=Release
        -S ${{ github.workspace }}
        -DCONSOLE_COLOR=OFF
        -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}
        -B ${{ github.workspace }}/build
    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config Release -j 6
    - name: Pack
      run: cd ${{ github.workspace }}/build && cpack -C Release
    - name: Store package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows
        path: ${{ github.workspace }}/build/*.exe

  release:
    runs-on: ubuntu-latest
    needs: [ubuntu, macos, windows]
    permissions:
      contents: write 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - uses: WasmVM/release-action@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          draft: false
          assets: |-
            *.deb
            *.pkg
            *.exe
