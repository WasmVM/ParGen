name: CMake

on:
  push:
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [clang]
        include:
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            parallel: 6

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure Bootstrap CMake
      run: >
        cmake -B "${{ steps.strings.outputs.build-output-dir }}_flex"
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DPXML_USE_BISON=ON
        -S ${{ github.workspace }}

    - name: Bootstrap build with flex
      run: >
        cmake --build "${{ steps.strings.outputs.build-output-dir }}_flex" --config ${{ matrix.build_type }} -j ${{matrix.parallel}}
        && cd "${{ steps.strings.outputs.build-output-dir }}_flex" && sudo make install

    - name: Configure CMake
      run: >
        cmake -B "${{ steps.strings.outputs.build-output-dir }}"
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DPXML_USE_BISON=OFF
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build "${{ steps.strings.outputs.build-output-dir }}" --config ${{ matrix.build_type }} -j ${{matrix.parallel}}

